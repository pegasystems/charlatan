// File generated by hadoop record compiler. Do not edit.
/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.pega.charlatan.node.bean;

import com.pega.charlatan.io.Deserializable;
import com.pega.charlatan.io.ZookeeperReader;

import java.io.IOException;
import java.util.Objects;

public class Id implements Deserializable {
	private String scheme;
	private String id;

	public Id() {
	}

	public Id(
			String scheme,
			String id) {
		this.scheme = scheme;
		this.id = id;
	}

	public String getScheme() {
		return scheme;
	}
	public String getId() {
		return id;
	}

	public boolean equals(Object obj) {
		if (obj instanceof Id) {

			if (obj == this) {
				return true;
			}

			Id other = (Id)obj;
			return Objects.equals(scheme, other.scheme) && Objects.equals(id, other.id);
		}
		return false;
	}

	public int hashCode() {
		return Objects.hash(scheme, id);
	}

	@Override
	public void deserialize(ZookeeperReader reader) throws IOException {
		scheme = reader.readString();
		id = reader.readString();
	}
}
